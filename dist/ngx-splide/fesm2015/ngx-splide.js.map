{"version":3,"file":"ngx-splide.js","sources":["../../../projects/ngx-splide/src/lib/ngx-splide-slide.component.ts","../../../projects/ngx-splide/src/lib/ngx-splide.component.html","../../../projects/ngx-splide/src/lib/ngx-splide.component.ts","../../../projects/ngx-splide/src/lib/ngx-splide.module.ts","../../../projects/ngx-splide/src/public-api.ts","../../../projects/ngx-splide/src/ngx-splide.ts"],"sourcesContent":["import {Component, Input, TemplateRef, ViewChild} from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'splide-slide',\r\n    template: '<ng-template #slideContent><ng-content></ng-content></ng-template>'\r\n})\r\nexport class NgxSplideSlideComponent\r\n{\r\n    @Input()\r\n    public class: string;\r\n    @ViewChild('slideContent')\r\n    public slideContent: TemplateRef<any>;\r\n}\r\n","<div #splideElement class=\"splide\" [ngClass]=\"containerClass\">\r\n    <div class=\"splide__track\">\r\n        <ul class=\"splide__list\">\r\n            <li class=\"splide__slide\" *ngFor=\"let slide of slides;\" [class]=\"slide.class\">\r\n                <ng-template *ngIf=\"slide.slideContent\" [ngTemplateOutlet]=\"slide.slideContent\"></ng-template>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n    AfterViewInit,\r\n    Component,\r\n    ContentChildren,\r\n    ElementRef,\r\n    Input, OnChanges, OnDestroy, Output,\r\n    QueryList, SimpleChanges,\r\n    ViewChild, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, Inject, PLATFORM_ID\r\n} from '@angular/core';\r\nimport { NgxSplideSlideComponent } from './ngx-splide-slide.component';\r\n\r\ndeclare var Splide: any;\r\n\r\n@Component({\r\n    selector: 'splide',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './ngx-splide.component.html'\r\n})\r\nexport class NgxSplideComponent implements AfterViewInit, OnChanges, OnDestroy\r\n{\r\n    @Input() selectedSlideIndex: number;\r\n    @Output() selectedSlideIndexChange = new EventEmitter<number>();\r\n\r\n    @Input() options: any = {};\r\n    @Input() containerClass: string = '';\r\n    @Input() syncWith: NgxSplideComponent;\r\n\r\n    @Output() onInit = new EventEmitter<any>();\r\n    @Output() onSplideEvent = new EventEmitter<any>();\r\n\r\n    @Output() onMounted = new EventEmitter();\r\n    @Output() onUpdated = new EventEmitter();\r\n    @Output() onMove = new EventEmitter();\r\n    @Output() onMoved = new EventEmitter();\r\n    @Output() onDrag = new EventEmitter();\r\n    @Output() onDragged = new EventEmitter();\r\n    @Output() onVisible = new EventEmitter();\r\n    @Output() onHidden = new EventEmitter();\r\n    @Output() onActive = new EventEmitter();\r\n    @Output() onInactive = new EventEmitter();\r\n    @Output() onClick = new EventEmitter();\r\n    @Output() onArrowsMounted = new EventEmitter();\r\n    @Output() onArrowsUpdated = new EventEmitter();\r\n    @Output() onPaginationMounted = new EventEmitter();\r\n    @Output() onPaginationUpdated = new EventEmitter();\r\n    @Output() onNavigationMounted = new EventEmitter();\r\n    @Output() onAutoplayPlay = new EventEmitter();\r\n    @Output() onAutoplayPause = new EventEmitter();\r\n    @Output() onAutoplayPlaying = new EventEmitter();\r\n    @Output() onLazyloadLoaded = new EventEmitter();\r\n\r\n    @ContentChildren(NgxSplideSlideComponent) public slides: QueryList<NgxSplideSlideComponent>;\r\n\r\n    @ViewChild('splideElement') splideElement: ElementRef;\r\n    protected splide;\r\n\r\n    constructor(private cdr: ChangeDetectorRef,  @Inject(PLATFORM_ID) private platformId: any) { }\r\n\r\n    ngAfterViewInit()\r\n    {\r\n        if (!isPlatformBrowser(this.platformId))\r\n            return;\r\n\r\n        this.splide = new Splide(this.splideElement.nativeElement, this.options);\r\n        if (this.syncWith) {\r\n            this.splide.sync(this.syncWith.getSplideInstance());\r\n        }\r\n\r\n        this.onInit.emit(this.splide);\r\n        this.addEventListeners();\r\n        this.splide.mount();\r\n\r\n        const slidesSubscription = this.slides.changes\r\n            .subscribe((list: QueryList<NgxSplideSlideComponent>) => {\r\n                this.cdr.detectChanges();\r\n\r\n                setTimeout(() => {\r\n                    this.splide.destroy();\r\n                    this.splide.mount();\r\n\r\n                    this.addEventListeners();\r\n                });\r\n            })\r\n        ;\r\n\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges)\r\n    {\r\n        if (!this.splide) {\r\n            return;\r\n        }\r\n\r\n        if (changes['selectedSlideIndex']) {\r\n            const currentIndex = changes['selectedSlideIndex'].currentValue;\r\n            if (currentIndex !== this.splide.index) {\r\n                this.splide.go(currentIndex);\r\n            }\r\n        }\r\n\r\n        if (changes['options']) {\r\n            this.splide.options = changes['options'].currentValue;\r\n        }\r\n    }\r\n\r\n    addEventListeners()\r\n    {\r\n        this.splide\r\n            .on('mounted', ( ...args ) => {\r\n                this.onMounted.emit(args);\r\n                this.onSplideEvent.emit({\r\n                    name: 'mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('updated', ( ...args ) => {\r\n                this.onUpdated.emit(args);\r\n                this.onSplideEvent.emit({\r\n                    name: 'updated',\r\n                    args\r\n                });\r\n            })\r\n            .on('move', (newIndex, oldIndex, destIndex) => {\r\n                this.selectedSlideIndexChange.emit(newIndex);\r\n                this.onMove.emit([ newIndex, oldIndex, destIndex ]);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'move',\r\n                    args: [ newIndex, oldIndex, destIndex ]\r\n                });\r\n            })\r\n            .on('moved', ( ...args ) => {\r\n                this.onMoved.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'moved',\r\n                    args\r\n                });\r\n            })\r\n            .on('drag', ( ...args ) => {\r\n                this.onDrag.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'drag',\r\n                    args\r\n                });\r\n            })\r\n            .on('dragged', ( ...args ) => {\r\n                this.onDragged.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'dragged',\r\n                    args\r\n                });\r\n            })\r\n            .on('visible', ( ...args ) => {\r\n                this.onVisible.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'visible',\r\n                    args\r\n                });\r\n            })\r\n            .on('hidden', ( ...args ) => {\r\n                this.onHidden.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'hidden',\r\n                    args\r\n                });\r\n            })\r\n            .on('active', ( ...args ) => {\r\n                this.onActive.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'active',\r\n                    args\r\n                });\r\n            })\r\n            .on('inactive', ( ...args ) => {\r\n                this.onInactive.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'inactive',\r\n                    args\r\n                });\r\n            })\r\n            .on('click', ( ...args ) => {\r\n                this.onClick.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'click',\r\n                    args\r\n                });\r\n            })\r\n            .on('arrows:mounted', ( ...args ) => {\r\n                this.onArrowsMounted.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'arrows:mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('arrows:updated', ( ...args ) => {\r\n                this.onArrowsUpdated.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'arrows:updated',\r\n                    args\r\n                });\r\n            })\r\n            .on('pagination:mounted', ( ...args ) => {\r\n                this.onPaginationMounted.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'pagination:mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('pagination:updated', ( ...args ) => {\r\n                this.onPaginationUpdated.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'pagination:updated',\r\n                    args\r\n                });\r\n            })\r\n            .on('navigation:mounted', ( ...args ) => {\r\n                this.onNavigationMounted.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'navigation:mounted',\r\n                    args\r\n                });\r\n            })\r\n            .on('autoplay:play', ( ...args ) => {\r\n                this.onAutoplayPlay.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'autoplay:play',\r\n                    args\r\n                });\r\n            })\r\n            .on('autoplay:pause', ( ...args ) => {\r\n                this.onAutoplayPause.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'autoplay:pause',\r\n                    args\r\n                });\r\n            })\r\n            .on('autoplay:playing', ( ...args ) => {\r\n                this.onAutoplayPlaying.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'autoplay:playing',\r\n                    args\r\n                });\r\n            })\r\n            .on('lazyload:loaded', ( ...args ) => {\r\n                this.onLazyloadLoaded.emit(args);\r\n\r\n                this.onSplideEvent.emit({\r\n                    name: 'lazyload:loaded',\r\n                    args\r\n                });\r\n            })\r\n        ;\r\n    }\r\n\r\n    getSplideInstance()\r\n    {\r\n        return this.splide;\r\n    }\r\n\r\n    ngOnDestroy()\r\n    {\r\n        if (this.splide) {\r\n            this.splide.destroy(true);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxSplideComponent } from './ngx-splide.component';\r\nimport { NgxSplideSlideComponent } from './ngx-splide-slide.component';\r\n\r\n@NgModule({\r\n    declarations: [ NgxSplideComponent, NgxSplideSlideComponent ],\r\n    imports: [ CommonModule ],\r\n    exports: [ NgxSplideComponent, NgxSplideSlideComponent ]\r\n})\r\nexport class NgxSplideModule {}\r\n","/*\r\n * Public API Surface of ngx-splide\r\n */\r\n\r\nexport * from './lib/ngx-splide-slide.component';\r\nexport * from './lib/ngx-splide.component';\r\nexport * from './lib/ngx-splide.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}